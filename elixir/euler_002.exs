# Euler 002: Even Fibonacci numbers
#
# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.
defmodule Fibonacci do
  def get_term(n) when n <=0 do
    0
  end

  def get_term(n) when n == 1 or n == 2 do
    n
  end

  def get_term(n) do
    get_term(n - 1) + get_term(n - 2)
  end

  def get_terms(start, step, limit, storage) do
    term = get_term(start)
    # IO.puts(term)
    cond do
      term <= limit ->
        get_terms(start + step, step, limit, storage ++ [term])
      true ->
        storage
    end
  end

  def collect(start, step, limit, collector) do
    term = get_term(start)
    cond do
      term <= limit ->
        collect(start + step, step, limit, collector + term)
      true ->
        collector
    end
  end
end

IO.inspect(Fibonacci.collect(2, 2, 4000000, 0))
# IO.inspect(Fibonacci.get_terms(2, 2, 4000000, []))
